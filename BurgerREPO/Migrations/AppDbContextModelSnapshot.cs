// <auto-generated />
using System;
using MVCPROJE.DATA.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BurgerREPO.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BurgerDATA.Concrete.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.BurgerSiparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BurgerID")
                        .HasColumnType("int");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SiparisID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BurgerID");

                    b.HasIndex("SepetId");

                    b.HasIndex("SiparisID");

                    b.ToTable("BurgerSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.EkstraMalzeme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("EkstraMalzemeler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.EkstraMalzemeSiparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EkstraMalzemeID")
                        .HasColumnType("int");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SiparisID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EkstraMalzemeID");

                    b.HasIndex("SepetId");

                    b.HasIndex("SiparisID");

                    b.ToTable("EkstraMalzemeSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Hamburger", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Burgerlar");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Icecek", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Icecekler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.IcecekSiparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Boyut")
                        .HasColumnType("int");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcecekID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SiparisID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IcecekID");

                    b.HasIndex("SepetId");

                    b.HasIndex("SiparisID");

                    b.ToTable("IcecekSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Menuler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.MenuSiparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SiparisID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MenuID");

                    b.HasIndex("SepetId");

                    b.HasIndex("SiparisID");

                    b.ToTable("MenuSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Sepet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Boyut")
                        .HasColumnType("int");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Sepetler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Siparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Boyut")
                        .HasColumnType("int");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Sos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Soslar");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.SosSiparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("GuncelleZamani")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SilmeZamani")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SiparisID")
                        .HasColumnType("int");

                    b.Property<int>("SosID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SepetId");

                    b.HasIndex("SiparisID");

                    b.HasIndex("SosID");

                    b.ToTable("SosSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SepetId")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("SepetId")
                        .IsUnique()
                        .HasFilter("[SepetId] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("BurgerDATA.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("BurgerDATA.Concrete.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.BurgerSiparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Hamburger", "Burger")
                        .WithMany("BurgerSiparis")
                        .HasForeignKey("BurgerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithMany("BurgerSiparisler")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Siparis", "Siparis")
                        .WithMany("BurgerSiparisler")
                        .HasForeignKey("SiparisID");

                    b.Navigation("Burger");

                    b.Navigation("Sepet");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.EkstraMalzemeSiparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.EkstraMalzeme", "EkstraMalzeme")
                        .WithMany("EkstraMalzemeSiparis")
                        .HasForeignKey("EkstraMalzemeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithMany("EkstraMalzemeSiparisler")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Siparis", "Siparis")
                        .WithMany("EkstraMalzemeSiparisler")
                        .HasForeignKey("SiparisID");

                    b.Navigation("EkstraMalzeme");

                    b.Navigation("Sepet");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.IcecekSiparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Icecek", "Icecek")
                        .WithMany("IcecekSiparis")
                        .HasForeignKey("IcecekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithMany("IcecekSiparisler")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Siparis", "Siparis")
                        .WithMany("IcecekSiparisler")
                        .HasForeignKey("SiparisID");

                    b.Navigation("Icecek");

                    b.Navigation("Sepet");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.MenuSiparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Menu", "Menu")
                        .WithMany("MenuSiparis")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithMany("MenuSiparisler")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Siparis", "Siparis")
                        .WithMany("MenuSiparisler")
                        .HasForeignKey("SiparisID");

                    b.Navigation("Menu");

                    b.Navigation("Sepet");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Siparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.User", null)
                        .WithMany("Siparis")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.SosSiparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithMany("SosSiparisler")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Siparis", "Siparis")
                        .WithMany("SosSiparisler")
                        .HasForeignKey("SiparisID");

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sos", "Sos")
                        .WithMany("SosSiparis")
                        .HasForeignKey("SosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sepet");

                    b.Navigation("Siparis");

                    b.Navigation("Sos");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.User", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithOne("User")
                        .HasForeignKey("MVCPROJE.ENTITIES.Concrete.User", "SepetId");

                    b.Navigation("Sepet");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.EkstraMalzeme", b =>
                {
                    b.Navigation("EkstraMalzemeSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Hamburger", b =>
                {
                    b.Navigation("BurgerSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Icecek", b =>
                {
                    b.Navigation("IcecekSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Menu", b =>
                {
                    b.Navigation("MenuSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Sepet", b =>
                {
                    b.Navigation("BurgerSiparisler");

                    b.Navigation("EkstraMalzemeSiparisler");

                    b.Navigation("IcecekSiparisler");

                    b.Navigation("MenuSiparisler");

                    b.Navigation("SosSiparisler");

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Siparis", b =>
                {
                    b.Navigation("BurgerSiparisler");

                    b.Navigation("EkstraMalzemeSiparisler");

                    b.Navigation("IcecekSiparisler");

                    b.Navigation("MenuSiparisler");

                    b.Navigation("SosSiparisler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Sos", b =>
                {
                    b.Navigation("SosSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.User", b =>
                {
                    b.Navigation("Siparis");
                });
#pragma warning restore 612, 618
        }
    }
}
