// <auto-generated />
using MVCPROJE.DATA.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240311145953_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DENEME.Concrete.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SepetId")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Burger", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Burgerlar");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.BurgerSiparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("BurgerID")
                        .HasColumnType("int");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BurgerID");

                    b.HasIndex("SepetId");

                    b.HasIndex("SiparisID");

                    b.ToTable("BurgerSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.EkstraMalzeme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EkstraMalzemeler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.EkstraMalzemeSiparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("EkstraMalzemeID")
                        .HasColumnType("int");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EkstraMalzemeID");

                    b.HasIndex("SepetId");

                    b.HasIndex("SiparisID");

                    b.ToTable("EkstraMalzemeSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Icecek", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Icecekler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.IcecekSiparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("IcecekID")
                        .HasColumnType("int");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IcecekID");

                    b.HasIndex("SepetId");

                    b.HasIndex("SiparisID");

                    b.ToTable("IcecekSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Menu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Menuler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.MenuSiparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MenuID");

                    b.HasIndex("SepetId");

                    b.HasIndex("SiparisID");

                    b.ToTable("MenuSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Sepet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<int>("Boyut")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Sepetler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Siparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<int>("Boyut")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("Siparisler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Sos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fiyat")
                        .HasColumnType("float");

                    b.Property<string>("Resim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Soslar");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.SosSiparis", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("SepetId")
                        .HasColumnType("int");

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.Property<int>("SosID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SepetId");

                    b.HasIndex("SiparisID");

                    b.HasIndex("SosID");

                    b.ToTable("SosSiparis");
                });

            modelBuilder.Entity("DENEME.Concrete.User", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithOne("User")
                        .HasForeignKey("DENEME.Concrete.User", "SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sepet");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.BurgerSiparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Burger", "Burger")
                        .WithMany("BurgerSiparis")
                        .HasForeignKey("BurgerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithMany("BurgerSiparisler")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Siparis", "Siparis")
                        .WithMany("BurgerSiparisler")
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Burger");

                    b.Navigation("Sepet");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.EkstraMalzemeSiparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.EkstraMalzeme", "EkstraMalzeme")
                        .WithMany("EkstraMalzemeSiparis")
                        .HasForeignKey("EkstraMalzemeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithMany("EkstraMalzemeSiparisler")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Siparis", "Siparis")
                        .WithMany("EkstraMalzemeSiparisler")
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EkstraMalzeme");

                    b.Navigation("Sepet");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.IcecekSiparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Icecek", "Icecek")
                        .WithMany("IcecekSiparis")
                        .HasForeignKey("IcecekID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithMany("IcecekSiparisler")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Siparis", "Siparis")
                        .WithMany("IcecekSiparisler")
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Icecek");

                    b.Navigation("Sepet");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.MenuSiparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Menu", "Menu")
                        .WithMany("MenuSiparis")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithMany("MenuSiparisler")
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Siparis", "Siparis")
                        .WithMany("MenuSiparisler")
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Sepet");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Siparis", b =>
                {
                    b.HasOne("DENEME.Concrete.User", "User")
                        .WithMany("Siparis")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.SosSiparis", b =>
                {
                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sepet", "Sepet")
                        .WithMany()
                        .HasForeignKey("SepetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Siparis", "Siparis")
                        .WithMany("SosSiparisler")
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MVCPROJE.ENTITIES.Concrete.Sos", "Sos")
                        .WithMany("SosSiparis")
                        .HasForeignKey("SosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sepet");

                    b.Navigation("Siparis");

                    b.Navigation("Sos");
                });

            modelBuilder.Entity("DENEME.Concrete.User", b =>
                {
                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Burger", b =>
                {
                    b.Navigation("BurgerSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.EkstraMalzeme", b =>
                {
                    b.Navigation("EkstraMalzemeSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Icecek", b =>
                {
                    b.Navigation("IcecekSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Menu", b =>
                {
                    b.Navigation("MenuSiparis");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Sepet", b =>
                {
                    b.Navigation("BurgerSiparisler");

                    b.Navigation("EkstraMalzemeSiparisler");

                    b.Navigation("IcecekSiparisler");

                    b.Navigation("MenuSiparisler");

                    b.Navigation("User")
                        .IsRequired();
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Siparis", b =>
                {
                    b.Navigation("BurgerSiparisler");

                    b.Navigation("EkstraMalzemeSiparisler");

                    b.Navigation("IcecekSiparisler");

                    b.Navigation("MenuSiparisler");

                    b.Navigation("SosSiparisler");
                });

            modelBuilder.Entity("MVCPROJE.ENTITIES.Concrete.Sos", b =>
                {
                    b.Navigation("SosSiparis");
                });
#pragma warning restore 612, 618
        }
    }
}
